# Generated by Django 4.2.7 on 2024-01-19 01:03

from django.db import migrations, models
import django.db.models.deletion
import uuid
import vehicles.validators


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('users', '0004_phonenumber'),
        ('devices', '0002_device_last_time_tracked'),
    ]

    operations = [
        migrations.CreateModel(
            name='Vehicle',
            fields=[
                ('vuid', models.UUIDField(db_index=True, default=uuid.uuid4, editable=False, help_text='UUID of the vehicle', primary_key=True, serialize=False)),
                ('color', models.CharField(choices=[('white', 'White'), ('black', 'Black'), ('red', 'Red'), ('blue', 'Blue'), ('green', 'Green')], default='white', help_text='Color of the vehicle', max_length=31)),
                ('chassis', models.CharField(blank=True, help_text='Chassis number of the vehicle', max_length=255)),
                ('plate', models.CharField(blank=True, help_text='Vehicle plate number', max_length=10, validators=[vehicles.validators.validate_vehicle_plate])),
                ('tonnage', models.DecimalField(blank=True, decimal_places=2, help_text='Tonnage of the vehicle', max_digits=5)),
                ('vin', models.CharField(blank=True, help_text='Vehicle Identification Number (VIN)', max_length=31)),
                ('device', models.OneToOneField(help_text='Device installed in the vehicle', null=True, on_delete=django.db.models.deletion.SET_NULL, to='devices.device')),
            ],
            options={
                'verbose_name': 'Vehicle',
                'verbose_name_plural': 'Vehicles',
            },
        ),
        migrations.CreateModel(
            name='VehicleType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('year', models.PositiveSmallIntegerField(help_text='Year of the vehicle', validators=[vehicles.validators.validate_manufacture_year])),
                ('brand', models.CharField(help_text='Brand of the vehicle', max_length=255)),
                ('model', models.CharField(help_text='Model of the vehicle', max_length=255)),
                ('version', models.CharField(blank=True, help_text='Version of the vehicle', max_length=255)),
                ('fuel_type', models.CharField(choices=[('Gasoline', 'Gasoline'), ('Diesel', 'Diesel'), ('Gas', 'Gas'), ('Electric', 'Electric')], default='Gasoline', help_text='Type of fuel used by the vehicle', max_length=255)),
                ('city_mileage', models.DecimalField(blank=True, decimal_places=2, help_text='City fuel efficiency', max_digits=5)),
                ('highway_mileage', models.DecimalField(blank=True, decimal_places=2, help_text='Highway fuel efficiency', max_digits=5)),
                ('mixed_mileage', models.DecimalField(blank=True, decimal_places=2, help_text='Mixed fuel efficiency', max_digits=5)),
            ],
            options={
                'verbose_name': 'Vehicle Type',
                'verbose_name_plural': 'Vehicle Types',
            },
        ),
        migrations.CreateModel(
            name='VehicleStatus',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('condition', models.CharField(choices=[('Operable', 'Operable'), ('Inoperable', 'Inoperable'), ('Under Maintenance', 'Under Maintenance')], default='Operable', help_text='Condition of the vehicle', max_length=31)),
                ('status_updated_at', models.PositiveBigIntegerField(default=1705626225, help_text='The date the status was updated')),
                ('vehicle', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='vehicles.vehicle')),
            ],
            options={
                'verbose_name': 'Vehicle Condition',
                'verbose_name_plural': 'Vehicle Conditions',
            },
        ),
        migrations.AddField(
            model_name='vehicle',
            name='vehicle_type',
            field=models.ForeignKey(help_text='Type of the vehicle', on_delete=django.db.models.deletion.PROTECT, to='vehicles.vehicletype'),
        ),
        migrations.CreateModel(
            name='UserVehicle',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user', models.ForeignKey(help_text='User who owns the vehicle', on_delete=django.db.models.deletion.CASCADE, to='users.customuser')),
                ('vehicle', models.ForeignKey(help_text='Vehicle owned by the user', on_delete=django.db.models.deletion.CASCADE, to='vehicles.vehicle')),
            ],
            options={
                'verbose_name': 'User Vehicle',
                'verbose_name_plural': 'User Vehicles',
            },
        ),
        migrations.CreateModel(
            name='Tire',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('registration_date', models.PositiveBigIntegerField(default=1705626225, help_text='The date the item was registered')),
                ('in_use', models.BooleanField(default=True, help_text='Whether the item is currently in use')),
                ('location', models.CharField(blank=True, help_text='Where the item is currently located', max_length=255)),
                ('notes', models.TextField(blank=True, help_text='Additional information or observations about the item')),
                ('manufacturer', models.CharField(blank=True, help_text='The manufacturer of the item', max_length=255)),
                ('cost', models.DecimalField(blank=True, decimal_places=2, help_text='The cost of the item', max_digits=8, null=True)),
                ('manufacturing_code', models.CharField(help_text='The manufacturing code of the tire.', max_length=50, validators=[vehicles.validators.validate_dot_code], verbose_name='Manufacturing code')),
                ('position_relative_to_vehicle', models.CharField(choices=[('Front Right', 'Front Right'), ('Rear Right', 'Rear Right'), ('Rear Right Outer', 'Rear Right Outer'), ('Rear Right Inner', 'Rear Right Inner'), ('Front Left', 'Front Left'), ('Rear Left', 'Rear Left'), ('Rear Left Outer', 'Rear Left Outer'), ('Rear Left Inner', 'Rear Left Inner'), ('Spare', 'Spare')], help_text='The position of the tire relative to the vehicle.', max_length=50, verbose_name='Position relative to vehicle')),
                ('vehicle', models.ForeignKey(help_text='The vehicle to which the tire belongs.', on_delete=django.db.models.deletion.CASCADE, related_name='tires', to='vehicles.vehicle')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Battery',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('registration_date', models.PositiveBigIntegerField(default=1705626225, help_text='The date the item was registered')),
                ('in_use', models.BooleanField(default=True, help_text='Whether the item is currently in use')),
                ('location', models.CharField(blank=True, help_text='Where the item is currently located', max_length=255)),
                ('notes', models.TextField(blank=True, help_text='Additional information or observations about the item')),
                ('manufacturer', models.CharField(blank=True, help_text='The manufacturer of the item', max_length=255)),
                ('cost', models.DecimalField(blank=True, decimal_places=2, help_text='The cost of the item', max_digits=8, null=True)),
                ('manufacturing_code', models.CharField(help_text='The manufacturing code of the battery.', max_length=50, validators=[vehicles.validators.validate_battery_code], verbose_name='Manufacturing code')),
                ('vehicle', models.ForeignKey(help_text='The vehicle to which the battery belongs.', on_delete=django.db.models.deletion.CASCADE, related_name='batteries', to='vehicles.vehicle')),
            ],
            options={
                'abstract': False,
            },
        ),
    ]
