# Generated by Django 4.2.7 on 2024-01-30 23:21

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('vehicles', '0004_alter_battery_registration_date_and_more'),
    ]

    operations = [
        migrations.CreateModel(
            name='MaintenanceManual',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('start_date', models.DateField(help_text='The start date of the maintenance cycle.')),
                ('advance_alerts_mileage', models.DecimalField(decimal_places=2, help_text='Using this value it is possible to anticipate maintenance in advance.', max_digits=10, verbose_name='Advance alerts')),
                ('advance_alerts_days', models.DecimalField(decimal_places=2, help_text='Using this value it is possible to anticipate maintenance in advance.', max_digits=10, verbose_name='Advance alerts')),
                ('minimum_frequency', models.DecimalField(decimal_places=2, help_text='The minimum mileage/time at which operations should be performed.', max_digits=10, verbose_name='Minimum frequency')),
                ('end_of_cycle', models.DecimalField(decimal_places=2, help_text='The mileage/time limit that marks the end of each maintenance cycle.', max_digits=10, verbose_name='End of maintenance cycle')),
                ('unit', models.CharField(choices=[('km', 'Kilometers'), ('mi', 'Miles'), ('hours', 'Hours'), ('days', 'Days'), ('weeks', 'Weeks'), ('months', 'Months')], help_text='The unit of measure of the mileage.', max_length=10, verbose_name='Unit')),
                ('vehicle', models.OneToOneField(help_text='The vehicle to which the maintenance manual belongs.', on_delete=django.db.models.deletion.PROTECT, to='vehicles.vehicle')),
            ],
            options={
                'verbose_name': 'Maintenance manual',
                'verbose_name_plural': 'Maintenance manuals',
            },
        ),
        migrations.CreateModel(
            name='MaintenanceOperation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('system', models.CharField(help_text="The vehicle's system.", max_length=50, verbose_name='System')),
                ('subsystem', models.CharField(help_text="Subsystem of the vehicle's main system.", max_length=50, verbose_name='Sub-system')),
                ('task', models.CharField(choices=[('I', 'Inspect and correct or replace if necessary.'), ('A', 'Adjust.'), ('R', 'Replace or change.'), ('T', 'Tighten to specified torque.'), ('L', 'Lubricate and/or grease.')], help_text='The task to be performed in the operation.', max_length=50, verbose_name='Task')),
                ('description', models.TextField(blank=True, help_text='Description of the task to be performed', verbose_name='Description')),
                ('frequency', models.DecimalField(decimal_places=2, help_text='The mileage/time at which the operation should be performed.', max_digits=10, verbose_name='Frequency')),
                ('frequency_days', models.IntegerField(blank=True, help_text='The frequency at which the operation should be performed, in days.', null=True, verbose_name='Frequency in days')),
                ('help_me', models.TextField(blank=True, help_text='Additional information to help perform the maintenance task', verbose_name='Help me')),
                ('maintenance_manual', models.ForeignKey(help_text='Maintenance manual to which this system belongs.', on_delete=django.db.models.deletion.PROTECT, related_name='vehicle_systems', to='maintenance_manuals.maintenancemanual')),
            ],
            options={
                'verbose_name': 'Maintenance operation',
                'verbose_name_plural': 'Maintenance operations',
            },
        ),
    ]
